@startuml class_diagram

header Architecture

!theme toy

Observer <--> Participant

Participant <|-- ParticipantFromGadgets

Observer <|-- ChatRoom

ChatRoom <-- Input
Participant <-- Input
Input <-- AcceptorFromGadgets 
ParticipantFromGadgets <-- AcceptorFromGadgets
proto_files <-- AcceptorFromGadgets
proto_files <-- ParticipantFromGadgets


package proto_files { }

abstract Participant {
    + Participant(name)
    + {abstract} ~Participant()
    + attach(observer)
    + notify(message)
    + {abstract} send(message)
    + disconnect()

    # name
    # observers
}

class AcceptorFromGadgets {
    + AcceptorFromGadgets(port)
    + accept()

    - {static} max_connections_wait
    - input
    - io_context
    - acceptor
}

class ParticipantFromGadgets {
    + ParticipantFromGadgets(name, socket)
    + read()

    - socket
}

interface Observer {
    + {abstract} send(message)
    + {abstract} disconnect(participant)
}

class ChatRoom {
    + join(participant)
    + get_number_of_members()

    - participants
}

class Input {
    + register_user(room_id, participant)

    - rooms
}

@enduml
